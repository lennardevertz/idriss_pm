+ ## System Summary: Decentralized Claim Verification
+
+ **Functionality:**
+ This system enables a community to collectively assess the veracity or characteristics of specific claims or pieces of content. The process involves:
+ 1.  **Claim Submission:** Users can introduce topics for community assessment (e.g., "Is statement X true?", "Is image Y AI-generated?").
+ 2.  **Confidence Staking:** Participants use an ERC20 token to express their confidence level regarding the assessment of the submitted claim. This is done by allocating shares across different potential assessments or confidence buckets within a specialized mechanism.
+ 3.  **Collective Assessment Display:** All individual confidence submissions are aggregated onchain. The system displays a collective viewpoint, typically represented as an average assessed value (mean) and the spread of opinions (standard deviation).
+ 4.  **Consensus Incentivization:** Participants whose expressed confidence aligns with the final aggregated community assessment receive rewards. Submissions that significantly deviate from this consensus result in a reallocation of a portion of the participant's staked tokens.
+
+ **Core Principle:** The system determines the "assessed truth" or "verified characteristic" of a claim based on the aggregated, stake-weighted confidence of its participants. It does not rely on external oracles for this primary assessment.
+ ---
+
+ ## Technical Details and Differentiation
+
+ **Underlying Mechanism:**
+ The system utilizes a Dynamic Parimutuel Market (DPM) mechanism, adapted for confidence aggregation rather than financial betting:
+ *   **Virtual Stake Interaction:** Participants stake an ERC20 token in a central contract (currently called `VotingV2`). When submitting confidence on a claim, no tokens are transferred to the DPM instance associated with that claim. The DPM operates on a "virtual weight" (the amount of ABC staked in `VotingV2` for that submission), trusting `VotingV2`'s accounting.
+ *   **Share-Based Confidence Expression:** Confidence is represented by how a participant distributes "shares" across various outcome buckets within the DPM. This allows for nuanced expressions of belief regarding the claim's assessment.
+ *   **On-Chain Aggregation of Confidence:** After a submission period for a claim closes, the DPM contract is designed to compute the mean and standard deviation of all participant submissions. This calculation is based on their share distributions and their corresponding virtual weights, and occurs directly on the blockchain.
+
+ **Key Differentiators:**
+ 1.  **Internal Consensus as Resolution:** Unlike systems relying on external oracles to determine a "true" outcome for a prediction, this system's "resolution" for a claim *is* the aggregated confidence band (mean ± standard deviation) generated from participant inputs. The assessment of the claim is derived internally from the collective.
+ 2.  **Incentive Model:** The reward and slashing mechanism incentivizes participants to align their expressed confidence with what they anticipate the *final collective consensus* will be for that claim.
+ 3.  **No Token Custody by DPM:** The DPM serves as a calculation engine for share tracking and aggregation. It does not hold or manage participants' tokens. All staking, reward distribution, and slashing accounting are handled by the `VotingV2` contract, using the aggregated results from the DPM.
+ 4.  **Optional Source Provenance (via UMA):** The system can optionally integrate UMA's Optimistic Oracle. This integration is not for resolving the truth of the claim itself, but can be used for a distinct preliminary step: verifying the existence, authenticity, or provenance of the source material related to the claim being assessed. This is separate from the core confidence aggregation.
+
+ **Distinction from Simple Polling:**
+ *   **Stake-Weighted Submissions:** The influence of a confidence submission on the aggregate is proportional to the amount of tokens the participant dedicates to it.
+ *   **Nuanced Expression:** The share-based system allows for expressing confidence across a spectrum or distribution, rather than a binary choice.
+ *   **Incentivized Participation:** The reward/slashing mechanism is designed to encourage thoughtful engagement and alignment with the collective assessment.
+
+ ---

System: Confidence-Based Prediction Market with UMA-Verified Sources

Overview
This system enables anyone to spin up a topic (identified by a URL or unique string)
and submit sources (e.g. articles, datasets, tweets, images) about that topic via UMA’s
optimistic oracle. Concurrently, users stake an ERC20 token ABC in a confidence submission window
to submit real-time confidence scores on-chain.
At topic close, the contract aggregates all confidence scores into a mean ± σ band
and immediately rewards or slashes participants based on whether their scores fall inside
or outside that band.

Actors

    - User: Submits source and confidence levels.
    - UMA Oracle: Verifies whether the submitted source exists (via an optimistic assertion).
    - Smart Contract: Handles confidence submissions, calculates statistics, and performs payouts/slashing.
    - System Backend: Handles auxiliary logic like submission timestamps and confidence weighting.

Flow:

1. Topics & Phase 0 (Source Submission):
   - Anyone can create a topic. Anyone can submit a source to that topic via UMA’s
     optimistic oracle (using default bond size & liveness from UMA).
   - Phase 0 runs for the full topic duration. All assertions (including disputed ones)
     are visible on-chain in real time.

2. Phase 1 (Confidence Submission):
   - Runs concurrently with Phase 0. Users stake ABC and submit a confidence score (%).
   - Each submission is timestamped on-chain for weighting.

3. Phase 2 & 3 (Aggregation & Settlement):
   - At topic end, the contract computes mean and σ over all valid scores.
   - Users inside the band earn a pro-rata share of slashed stakes (based on stake size & submission time).
   - Users outside the band are slashed by a fixed %.
   - Settlement is performed on-chain; no UMA DVM or OO calls are needed beyond source visibility.

3. Aggregation (post-deadline):
   - Once the submission window ends:
     - Compute mean and standard deviation of all valid confidence scores.
     - Earlier submissions may be weighted more.
     - Define a “confidence band” (e.g. ±1σ around mean).

4. Payout & Slashing:
   - Based on the DPM's aggregated confidence band (mean ± σ), `VotingV2` (the staking contract) determines if a user's submission was in-band or out-of-band.
   - Users inside the band are eligible for rewards. Rewards are a pro-rata share of tokens from out-of-band users.
   - Users outside the band have a portion of their staked ABC (for that topic) accounted for as slashed within `VotingV2`.
   - This accounting happens lazily when a user's trackers are updated in `VotingV2`. The DPM itself does not handle ABC token transfers for rewards/slashes.
   - `VotingV2`'s reward calculation logic can incorporate time-weighting to discourage last-minute band-chasing.

Key Mechanics

    - UMA is only used for source collection via the optimistic oracle. The confidence
      market (aggregation & settlement) is fully on-chain and does not call the DVM or OO.
    - Users must stake ABC in a global staking contract (`VotingV2`). While actively staked:
      • They may submit confidence scores on any topic. The DPM interaction is virtual; no ABC tokens are transferred to the DPM. The DPM trusts `VotingV2` regarding the stake amount associated with a submission.
      • Stakes earn pro-rata emissions per block (rate set by governance), managed by `VotingV2`.
      • For out-of-band submissions on a topic, a portion of the user's ABC stake committed to that topic is accounted as slashed within `VotingV2`. This accounting occurs when the user's trackers are updated.
      • These accounted-for "slashed" amounts form a pool within `VotingV2` that is then distributed as rewards to in-band stakers for that topic, pro-rata by their stake size & submission timestamp (logic within `VotingV2`).
      • Initiating an unstake triggers a 7-day cooldown during which that stake cannot submit scores or be withdrawn.
    - The contract emits view functions per topic: current phase, time remaining, submissions, and aggregates.
    - User share distribution data (from `bucketIds` and `shares`) is managed by the DPM. `VotingV2` tracks the total ABC amount staked per user per topic.
    - Confidence scores are aggregated automatically on-chain by the DPM to produce a mean and standard deviation.
    - `VotingV2`'s reward calculation logic can incorporate time-weighting to discourage last-minute band-chasing.

Governance & parameter configurability
    - Global governance sets protocol-wide defaults (e.g. UMA bond size, slashing %, emission rate).
    - Each topic creator can override per-topic parameters (e.g. topic duration).
    - All topics are fully decentralized: anyone may spawn a new topic with custom settings.
